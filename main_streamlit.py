import streamlit as st
import requests

# URL de ton backend FastAPI
API_URL = "http://localhost:8000"

# Titre de l'application
st.title("üé¨ Movie Explorer")

# Initialiser l'√©tat de session
if "movie" not in st.session_state:
    st.session_state.movie = None
if "summary" not in st.session_state:
    st.session_state.summary = None

# Bouton pour r√©cup√©rer un film al√©atoire
if st.button("üé≤ Show Random Movie"):
    try:
        response = requests.get(f"{API_URL}/movies/random/")
        response.raise_for_status()
        movie_data = response.json()

        # Stocker le film dans la session
        st.session_state.movie = movie_data
        st.session_state.summary = None  # R√©initialiser le r√©sum√©

    except requests.RequestException as e:
        st.error(f"‚ùå Erreur lors de la r√©cup√©ration du film : {e}")
        st.session_state.movie = None

# Affichage des d√©tails du film
if st.session_state.movie:
    movie = st.session_state.movie
    st.header(f"{movie['title']} ({movie['year']})")
    st.write(f"üé¨ Directed by: {movie['director']}")
    st.markdown("**üé≠ Cast:**")
    for actor in movie["actors"]:
        st.write(f"- {actor['actor_name']}")

# Bouton pour g√©n√©rer un r√©sum√© (activ√© uniquement si un film est charg√©)
if st.session_state.movie:
    if st.button(" Get Summary"):
        try:
            movie_id = st.session_state.movie["id"]
            payload = {"movie_id": movie_id}
            response = requests.post(f"{API_URL}/generate_summary/", json=payload)
            response.raise_for_status()
            summary_data = response.json()

            # Stocker le r√©sum√© dans session_state
            st.session_state.summary = summary_data["summary_text"]

        except requests.RequestException as e:
            st.error(f" Erreur lors de la g√©n√©ration du r√©sum√© : {e}")
            st.session_state.summary = None

# Affichage du r√©sum√© si pr√©sent
if st.session_state.summary:
    st.markdown("### üìù Summary:")
    st.info(st.session_state.summary)
